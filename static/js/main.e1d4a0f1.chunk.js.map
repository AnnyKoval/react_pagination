{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","memo","perPage","total","currentPage","onPageChange","lastPage","Math","ceil","allPages","onPageChangeHanler","page","className","cn","disabled","href","onClick","map","active","items","App","length","useState","setPerPage","setCurrentPage","lastItemOnPage","min","firstItemOnPage","itemsPerPage","useMemo","handlePageChange","useCallback","id","value","onChange","event","target","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"yLAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,2BCIIG,EAA8BC,gBAAK,YAKzC,IAJLC,EAII,EAJJA,QACAC,EAGI,EAHJA,MACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAWC,KAAKC,KAAKL,EAAQD,GAC7BO,EAAWf,EAAW,EAAGY,GAkBzBI,EAAqB,SAACC,GAAD,OAAkB,kBAAMN,EAAaM,KAEhE,OACE,qBAAIC,UAAU,aAAd,UACE,oBACEA,UAAWC,IACT,YACA,CAAEC,SAA0B,IAAhBV,IAHhB,SAME,mBACE,UAAQ,WACRQ,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBX,EACfY,QA/BoB,WAC1BX,EACED,EAAc,EACVA,EAAc,EACdA,IAsBF,oBAUDK,EAASQ,KAAI,SAAAN,GAAI,OAChB,oBAEEC,UAAWC,IACT,YACA,CAAEK,OAAQd,IAAgBO,IAJ9B,SAOE,mBACE,UAAQ,WACRC,UAAU,YACVG,KAAI,WAAMJ,GACVK,QAASN,EAAmBC,GAJ9B,SAMGA,KAZEA,MAgBT,oBACEC,UAAWC,IACT,YACA,CAAEC,SAAUV,IAAgBE,IAHhC,SAME,mBACE,UAAQ,WACRM,UAAU,YACVG,KAAK,QACL,gBAAeX,IAAgBE,EAC/BU,QAzDoB,WAC1BX,EACED,EAAcE,EACVF,EAAc,EACdA,IAgDF,0BCzEFe,EAAQzB,EAAW,EAAG,IACzBuB,KAAI,SAAApB,GAAO,qBAAYA,MAEbuB,EAAgBnB,gBAAK,WAChC,IAAME,EAAQgB,EAAME,OACpB,EAA8BC,mBAAS,GAAvC,mBAAOpB,EAAP,KAAgBqB,EAAhB,KACA,EAAsCD,mBAAS,GAA/C,mBAAOlB,EAAP,KAAoBoB,EAApB,KAEMC,EAAiBlB,KAAKmB,IAAIxB,EAAUE,EAAaD,GACjDwB,EAAkBzB,GAAWE,EAAc,GAAK,EAChDwB,EAAeC,mBACnB,kBAAMnC,EAAWiC,EAAiBF,KAClC,CAACE,EAAiBF,IAQdK,EAAmBC,uBAAY,SAACpB,GACpCa,EAAeb,KACd,IAEH,OACE,sBAAKC,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWR,EADX,mBACiCuB,EADjC,cACsDF,EADtD,eAC2EtB,EAD3E,OAIA,sBAAKS,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRoB,GAAG,kBACHpB,UAAU,eACVqB,MAAO/B,EACPgC,SAxBkB,SAACC,GAC3BZ,GAAYY,EAAMC,OAAOH,OACzBT,EAAe,IAiBT,UAOE,wBAAQS,MAAO,EAAf,eACA,wBAAQA,MAAO,EAAf,eACA,wBAAQA,MAAO,GAAf,gBACA,wBAAQA,MAAO,GAAf,qBAIJ,uBAAOI,QAAQ,kBAAkBzB,UAAU,qBAA3C,+BAKF,cAACZ,EAAD,CACEG,MAAOA,EACPD,QAASA,EACTE,YAAaA,EACbC,aAAcyB,IAGhB,6BACGF,EAAaX,KAAI,SAAAqB,GAAI,OACpB,oBAAI,UAAQ,OAAZ,wBACWA,IADaA,cClElCC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.e1d4a0f1.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React, { memo } from 'react';\nimport cn from 'classnames';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (page: number) => void,\n};\n\nexport const Pagination: React.FC<Props> = memo(({\n  perPage,\n  total,\n  currentPage,\n  onPageChange,\n}) => {\n  const lastPage = Math.ceil(total / perPage);\n  const allPages = getNumbers(1, lastPage);\n\n  const handleClickPrevPage = () => {\n    onPageChange(\n      currentPage > 1\n        ? currentPage - 1\n        : currentPage,\n    );\n  };\n\n  const handleClickNextPage = () => {\n    onPageChange(\n      currentPage < lastPage\n        ? currentPage + 1\n        : currentPage,\n    );\n  };\n\n  const onPageChangeHanler = (page: number) => () => onPageChange(page);\n\n  return (\n    <ul className=\"pagination\">\n      <li\n        className={cn(\n          'page-item',\n          { disabled: currentPage === 1 },\n        )}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1}\n          onClick={handleClickPrevPage}\n        >\n          «\n        </a>\n      </li>\n      {allPages.map(page => (\n        <li\n          key={page}\n          className={cn(\n            'page-item',\n            { active: currentPage === page },\n          )}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page}`}\n            onClick={onPageChangeHanler(page)}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n      <li\n        className={cn(\n          'page-item',\n          { disabled: currentPage === lastPage },\n        )}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === lastPage}\n          onClick={handleClickNextPage}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n});\n","import React, {\n  useState, memo, useMemo, useCallback,\n} from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\nconst items = getNumbers(1, 42)\n  .map(numbers => `Item ${numbers}`);\n\nexport const App: React.FC = memo(() => {\n  const total = items.length;\n  const [perPage, setPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const lastItemOnPage = Math.min(perPage * currentPage, total);\n  const firstItemOnPage = perPage * (currentPage - 1) + 1;\n  const itemsPerPage = useMemo(\n    () => getNumbers(firstItemOnPage, lastItemOnPage),\n    [firstItemOnPage, lastItemOnPage],\n  );\n\n  const handleChangePerPage = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setPerPage(+event.target.value);\n    setCurrentPage(1);\n  };\n\n  const handlePageChange = useCallback((page: number) => {\n    setCurrentPage(page);\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${firstItemOnPage} - ${lastItemOnPage} of ${total})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={handleChangePerPage}\n          >\n            <option value={3}>3</option>\n            <option value={5}>5</option>\n            <option value={10}>10</option>\n            <option value={20}>20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={total}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={handlePageChange}\n      />\n\n      <ul>\n        {itemsPerPage.map(item => (\n          <li data-cy=\"item\" key={item}>\n            {`Item ${item}`}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n});\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}